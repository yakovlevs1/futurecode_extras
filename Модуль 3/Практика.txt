Представьте себе электронный дневник, в котором у каждого ученика есть свой аккаунт.

Далее идет описание того, что было бы неплохо видеть, но учтите, что вы вольны как угодно расширить/урезать функционал

Восклицательными знаками отметил те места, где нужно избежать ошибок (с помощью любого доступного подхода: LBYL или EAFP)

Формально все функции могут уместиться в один модуль вместо пакета, но вы уж ради практики раскидайте их в разные файлы и создайте пакет

Любые вопросы по тому, как это всё сделать (в том числе уточнения тз) пишите в личку в телеге.

Предлагаю сделать следующий пакет:
	Внутри модулей в пакете реализуйте следующие методы:
	
	add_user(username, password): 
		Добавляет нового пользователя в словарь с информацией о пользователях. 
		Ключом словаря будет имя пользователя (username)
		Значением по соответствующему ключу будет список, в котором:
			Первый элемент - пароль (password)
			Второй элемент - список из оценок пользователя. При добавлении нового пользователя пусть будет пустым.
		! Убедитесь, что такого пользователя не было

	remove_user(username): 
		Удаляет пользователя с указанным именем из словаря с информацией о пользователях.
		! Убедитесь, что такой пользователь существует (перед удалением)

	edit_password(username, new_password): 
		Изменяет пароль пользователя с указанным именем. 
		Пользователь может изменить только пароль.
		! Убедитесь, что такой пользователь существует
		! Убедитесь, что новый пароль не совпадает со старым и достаточно безопасен
			для проверки безопасности пароля см. функцию is_valid_password ниже

	get_user_marks(username): 
		Возвращает список оценок пользователя с указанным именем.
		Если оценок еще нет, то вывести сообщение об этом вместо пустого списка.
		! Убедитесь, что такой пользователь существует
	
	is_valid_password(string):
		Проверяет, что пароль достаточно безопасен:
			Содержит большие и маленькие английские буквы, содержит цифры и спецсимволы
		Возвращает значение типа bool
		! Не забудьте, что в качестве string в функцию могут отправить что угодно, не только str
	
	add_new_mark(username, mark):
		Добавляет новую оценку выбранному пользователю.
		! Убедитесь, что такой пользователь существует
		! Убедитесь, что mark - корректная оценка (от 2 до 5) (и вообще является числом)
	
	get_average_mark(username):
		Считает среднюю оценку пользователя и возвращает её
		! Убедитесь, что такой пользователь существует
	